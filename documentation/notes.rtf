{\rtf1\ansi\ansicpg1252\cocoartf2639
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fswiss\fcharset0 Helvetica-Bold;\f2\froman\fcharset0 Times-Roman;
\f3\froman\fcharset0 Times-Bold;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;}
\margl1440\margr1440\vieww17500\viewh9800\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \
\

\f1\b Concepts\

\f0\b0 \
Higher Order Function\
\
\pard\pardeftab720\partightenfactor0

\f2 \cf0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Higher-order functions are 
\f3\b \strokec2 functions that either accept other functions as arguments, or return a function as a result
\f2\b0 \strokec2 . The result of one higher-order function can be used as the input to another higher-order function. Any time we pass a lambda expression to a method, that method is a higher-order function.\
\
Examples:\
	map:  how to do the mapping of input to output can be passed into the function\
	filter:  the criteria for filtering may be passed into the function\
	sort:  the comparitor operator may be passed into the function\

\f0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 Functional Interface\
	- an interface that exposes only one method\
	- basically acts as a function\
	- makes Java more like a Functional Programming Language where functions are \'93first class citizens\'94 \
	- used in Stream API, Lambdas\
\
\
\

\f1\b Language Features
\f0\b0 \
\
Lambda\
	Java 8\
\
	What is it?\
		anonymous method ( not named ) written in-line that takes in one or more parameters and returns a value\
\
	What is it good for?\
		combine these with Stream API and Collection methods and these can support parallel execution on bulk operations on Collections\
\
		concise way of implementing a functional interface \
			functional interface is one that only defines a single method\
			prior to lambdas - one had only 2 choice for this in Java:  \
				- separate class that implements the interface\
				- anonymous inner class\
\
\
\
Stream Interface\
	Java 8\
\
	What is it?\
\
	What is it good for?\
		Iterate over a large data set and run a sequence of steps or transformations on the data\
		Expressive way to show a data pipeline\
		Reduction of Code\
		Ability to allow Java to leverage parallelization on the data\
\
\pard\pardeftab720\partightenfactor0

\f2 \cf0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\

\f0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
\pard\pardeftab720\partightenfactor0
\cf0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
}